#include <iostream>

struct Node
{
	char data;
	Node *next, *prev;

	Node(char data, Node* prev = nullptr, Node* next = nullptr)
	{
		this->data = data;
		this->prev = prev;
		this->next = next;
	}
};

void pushBack(Node*& first, char data)
{
	if (first == nullptr)
	{
		first = new Node(data);
		return;
	}

	Node* cur = first;

	while (cur->next != nullptr)
	{
		cur = cur->next;
	}

	Node* newNode = new Node(data, cur);
	cur->next = newNode;
}

void reverseSum(Node*& first)
{
	Node* cur = first;
	Node* copy = nullptr;

	int sum = 0;

	while (cur != nullptr)
	{
		sum += cur->data - '0';

		copy = cur->prev;
		cur->prev = cur->next;
		cur->next = copy;
		cur = cur->prev;
	}

	if (copy != nullptr)
	{
		first = copy->prev;
	}

	Node* temp = new Node(sum + '0' , nullptr, first);
	first->prev = temp;
	first = temp;
}

int main()
{
	Node* first = nullptr;

	pushBack(first, '6');
	pushBack(first, '1');
	pushBack(first, '5');
	pushBack(first, '7');
	pushBack(first, '8');

	reverseSum(first);

	print(first);

	return 0;
}
